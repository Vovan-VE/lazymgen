+%table-name (id:primary, state:bool()?, name:string(255), price:decimal(20,2), a:bool=TRUE, b:int(10)?=NULL, name:string(16)?='default \'string\\ value')
-%table (name:string(64))
+%table.foo:int(11)?=0
+%table.foo:int(11) = -12.34e5
+%table.foo:int(11) ^
+%table.foo:int(11) >bar
-%table.foo:int(11) = +1.2e+3 >bar

+%a\.b\\c.x\%y\(z--q:int

+PK %table.id
+PK @pk-table %table.id
-PK %table.id
+U %table.name
+U %table(name)
+U @idx-table-name %table.name
-U %table.name
+I %table.foo
+I %table(foo,bar)
+I @idx-table-foo-bar %table(foo,bar)
+I @idx-table-foo-bar %table(foo,bar)
-I %table(foo,bar)

+FK %child.parent_id => %parent.id ~! *!
+FK %child(parent_id) => %parent(id) ~> *>
+FK @fk-child-parent %child.foo => %parent(foo)
+FK @fk-child-parent %child(foo) => %parent.foo ~?
+FK @fk-child-parent %child(foo,bar) => %parent(foo,bar) *>
+FK %child(foo,bar) => %parent(foo,bar)
-FK %child-is-long(foo-is-long-too,bar) => %parent(foo,bar)
-FK %child-is-long(foo-is-long-too,bar-also-much-long) => %parent(foo,bar)
-FK %child-is-long(foo-is-long-too,bar-also-much-long) => %parent-is-more-long(foo,bar)

*%table => %bar
*%table.foo => bar
*%table.foo:decimal(20,2) => :decimal(20,10)?
*%table.foo:decimal(20,2) > bar => :decimal(20,10)? > baz

=
